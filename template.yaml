AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  verifiedpermissions-demo

  Sample SAM Template for verifiedpermissions-demo

Parameters:
  AWSLambdaPowertoolsLayerArn:
    Type: String
    Default: arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:46

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.11

Resources:
  TodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: parent_id
          AttributeType: S
        - AttributeName: path
          AttributeType: S
        - AttributeName: board_id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ParentChildrenIndex
          KeySchema:
            - AttributeName: parent_id
              KeyType: HASH
            - AttributeName: id
              KeyType: RANGE
          Projection: 
            ProjectionType: ALL
        - IndexName: FullLineageIndex
          KeySchema:
            - AttributeName: board_id
              KeyType: HASH
            - AttributeName: path
              KeyType: RANGE
          Projection: 
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  TodoAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: app.lambda_handler
      Architectures:
      - x86_64
      Layers:
        - !Ref AWSLambdaPowertoolsLayerArn
      Environment:
        Variables:
          TABLE_NAME: !Ref TodoTable
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - "dynamodb:Query"
              - "dynamodb:GetItem"
              - "dynamodb:PutItem"
            Resource: 
              - !GetAtt TodoTable.Arn
              - !Join ["/", [!GetAtt TodoTable.Arn, "index/*"]]
          - Effect: Allow
            Action:
              - "verifiedpermissions:*"
            Resource: "*"

  TodoCreateHierarchyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_create_hierarchy/
      Handler: app.lambda_handler
      Architectures:
      - x86_64
      Layers:
        - !Ref AWSLambdaPowertoolsLayerArn
      Environment:
        Variables:
          TABLE_NAME: !Ref TodoTable
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - "dynamodb:Scan"
            Resource: !GetAtt TodoTable.Arn

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

